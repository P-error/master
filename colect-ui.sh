#!/usr/bin/env bash
set -euo pipefail

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
OUT_NAME="project-ui-bundle-$(date +'%Y-%m-%d_%H-%M').zip"
WORKDIR="$(pwd)"
STAGING="$(mktemp -d -t ui_bundle_XXXXXX)"

# –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å package.json)
if [[ ! -f "$WORKDIR/package.json" ]]; then
  echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω package.json. –ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞."
  exit 1
fi

echo "üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ staging –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $STAGING"

# –°–æ–∑–¥–∞–¥–∏–º –±–∞–∑–æ–≤—ã–µ –ø–∞–ø–∫–∏
mkdir -p "$STAGING"

# === –°–ø–∏—Å–æ–∫ include/exclude –¥–ª—è rsync ===
# –ú—ã –±–µ—Ä–µ–∂–Ω–æ —Å–æ–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è UI –∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ API.
# –í–∫–ª—é—á–∞–µ–º: src/* (pages, components, styles, api, lib, hooks, types), public/*, –∫–æ–Ω—Ñ–∏–≥–∏, prisma/schema.prisma
# –ò—Å–∫–ª—é—á–∞–µ–º: node_modules, .next, .git, .vercel, –ª—é–±—ã–µ .env*, —Å–±–æ—Ä–æ—á–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã.
INCLUDE_FILE="$STAGING/rsync-include.txt"
EXCLUDE_FILE="$STAGING/rsync-exclude.txt"

cat > "$INCLUDE_FILE" <<'EOF'
# === include ===
/src/
/src/***
/public/***
/prisma/schema.prisma
/prisma/migrations/***        # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ ‚Äî –µ—Å–ª–∏ –Ω—É–∂–Ω—ã –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
/package.json
/pnpm-lock.yaml
/package-lock.json
/yarn.lock
/tsconfig.json
/next.config.js
/next.config.mjs
/next.config.ts
/tailwind.config.js
/tailwind.config.cjs
/tailwind.config.ts
/postcss.config.js
/postcss.config.cjs
/postcss.config.ts
/README.md
EOF

cat > "$EXCLUDE_FILE" <<'EOF'
# === exclude ===
/node_modules/***
/.next/***
/dist/***
/build/***
/coverage/***
/out/***
/.vercel/***
/.git/***
/.gitignore
/.env
/.env.*
/prisma/.env
**/*.log
**/*.DS_Store
EOF

# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç –≤ staging –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º
rsync -a --prune-empty-dirs \
  --include-from="$INCLUDE_FILE" \
  --exclude-from="$EXCLUDE_FILE" \
  "$WORKDIR"/ "$STAGING"/

# –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º MANIFEST, —á—Ç–æ–±—ã –±—ã–ª–æ –≤–∏–¥–Ω–æ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —É—à–ª–æ –≤ –∞—Ä—Ö–∏–≤
echo "üßæ –ì–µ–Ω–µ—Ä–∏—Ä—É—é MANIFEST..."
(
  cd "$STAGING"
  {
    echo "# MANIFEST ‚Äî —Ñ–∞–π–ª—ã, –≤–∫–ª—é—á—ë–Ω–Ω—ã–µ –≤ –∞—Ä—Ö–∏–≤"
    echo "# –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: $(date -Iseconds)"
    echo
    find . -type f | sed 's|^\./||' | sort
  } > MANIFEST.txt
)

# –ü—Ä–æ–≤–µ—Ä–∏–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä
REQUIRED=(
  "src/pages"
  "src/components"
  "tailwind.config.js"
  "postcss.config.js"
  "package.json"
)
MISSING=0
for p in "${REQUIRED[@]}"; do
  if [[ ! -e "$STAGING/$p" ]]; then
    echo "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ $p –≤ —Å–æ–±—Ä–∞–Ω–Ω–æ–º –ø–∞–∫–µ—Ç–µ (–≤–æ–∑–º–æ–∂–Ω–æ —É —Ç–µ–±—è –¥—Ä—É–≥–æ–π –ø—É—Ç—å –∏–ª–∏ –∏–º—è —Ñ–∞–π–ª–∞)."
    MISSING=1
  fi
done

# –£–ø–∞–∫–æ–≤—ã–≤–∞–µ–º zip —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∫–æ–º–ø—Ä–µ—Å—Å–∏–µ–π
echo "üóúÔ∏è  –£–ø–∞–∫–æ–≤–∫–∞ –≤ zip: $OUT_NAME"
(
  cd "$STAGING"
  zip -9 -r "$WORKDIR/$OUT_NAME" . >/dev/null
)

echo
echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ê—Ä—Ö–∏–≤: $WORKDIR/$OUT_NAME"
echo "üìÑ MANIFEST –≤–Ω—É—Ç—Ä–∏ –∞—Ä—Ö–∏–≤–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤."

if [[ "$MISSING" -eq 1 ]]; then
  echo
  echo "‚ÑπÔ∏è  –ü–æ—Ö–æ–∂–µ, —á–∞—Å—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø—É—Ç–µ–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –≠—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ,"
  echo "    –Ω–æ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –∑–∞–±—É–¥–µ—Ç—Å—è ‚Äî —è —Å–∫–∞–∂—É, –∏ –º—ã –¥–æ–±–∞–≤–∏–º –ø–∞—Ç—Ç–µ—Ä–Ω –≤ —Å–∫—Ä–∏–ø—Ç."
fi

# –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ –≤–µ—Å—É
ARCHIVE_SIZE=$(du -h "$WORKDIR/$OUT_NAME" | awk '{print $1}')
echo "üì¶ –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: $ARCHIVE_SIZE"

# –£–±–µ—Ä—ë–º staging
rm -rf "$STAGING"
