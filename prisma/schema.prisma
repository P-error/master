datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int            @id @default(autoincrement())
  login           String         @unique
  password        String
  age             Int?
  educationLevel  String?
  learningGoal    String?
  learningStyle   String?
  preferredFormat String?
  preferredTone   String?
  detailLevel     String?
  priorKnowledge  String?
  languageLevel   String?

  subjects        Subject[]
  tests           Test[]
  chatMessages    ChatMessage[]  

  darkMode        Boolean   @default(false)
  accessibleMode  Boolean   @default(false)
  fontSize        String    @default("base") // sm | base | lg | xl

  questionResults QuestionTagResult[]
}

model ChatMessage {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  role      String   // "user" | "assistant"
  content   String
  createdAt DateTime @default(now())
}






model Subject {
  id           Int      @id @default(autoincrement())
  name         String
  difficulty   String   @default("medium")
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  tests        Test[]
}


model Test {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  subject      Subject?  @relation(fields: [subjectId], references: [id], onDelete: Cascade)
  subjectId    Int?
  topic        String
  difficulty   String
  numQuestions Int
  numOptions   Int
  score        Int
  createdAt    DateTime  @default(now())
  questions    Json

  results      QuestionTagResult[]
}

model QuestionTagResult {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  test      Test     @relation(fields: [testId], references: [id])
  testId    Int
  question  String
  tags      Json   // JSON-массив тегов
  isCorrect Boolean
  createdAt DateTime @default(now())
}

